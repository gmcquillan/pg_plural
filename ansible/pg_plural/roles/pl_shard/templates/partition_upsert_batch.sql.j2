{% for table in pg_plural_tables %}

CREATE OR REPLACE FUNCTION upsert_{{ table.name }}(
	{% for column_name, column_type in table.rows %}
	in_{{ row['column_name'] }} {% if row['column_name'] == partition_column %} {{ hll_intermediate_type }}[] {% else %} {{ row['column_type'] }}[] {% endif %}{% if not loop.last %},{% endif %}
	{% endfor %}

) RETURNS TABLE (update int)
    LANGUAGE plpgsql
    AS $$
BEGIN

RETURN QUERY 
    SELECT upsert_{{ table.name }}({% for column_name, column_type in table.rows %}counts.in_{{ column_name }}{% if not loop.last %},{% endif %}{% endfor %}) 
	FROM unnest({% for column_name, column_type in table.rows %}in_{{ column_name }}{% if not loop.last %},{% else %}{% endif %}{% endfor %})
    AS counts ({% for column_name, column_type in table.rows %}in_{{ column_name }}{% if not loop.last %},{% else %}{% endif %}{% endfor %});

END;
$$;

{% endfor %}
